# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import server_pb2 as server__pb2


class KeyValueStoreStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetValue = channel.unary_unary(
                '/server.KeyValueStore/GetValue',
                request_serializer=server__pb2.ValueRequest.SerializeToString,
                response_deserializer=server__pb2.ValueResponse.FromString,
                )
        self.PutValue = channel.unary_unary(
                '/server.KeyValueStore/PutValue',
                request_serializer=server__pb2.ValueRequest.SerializeToString,
                response_deserializer=server__pb2.ValueResponse.FromString,
                )
        self.VoteRequest = channel.unary_unary(
                '/server.KeyValueStore/VoteRequest',
                request_serializer=server__pb2.VoteRequestMessage.SerializeToString,
                response_deserializer=server__pb2.VoteResponseMessage.FromString,
                )
        self.Heartbeat = channel.unary_unary(
                '/server.KeyValueStore/Heartbeat',
                request_serializer=server__pb2.HeartbeatRequest.SerializeToString,
                response_deserializer=server__pb2.HeartbeatResponse.FromString,
                )


class KeyValueStoreServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetValue(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PutValue(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VoteRequest(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Heartbeat(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_KeyValueStoreServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetValue': grpc.unary_unary_rpc_method_handler(
                    servicer.GetValue,
                    request_deserializer=server__pb2.ValueRequest.FromString,
                    response_serializer=server__pb2.ValueResponse.SerializeToString,
            ),
            'PutValue': grpc.unary_unary_rpc_method_handler(
                    servicer.PutValue,
                    request_deserializer=server__pb2.ValueRequest.FromString,
                    response_serializer=server__pb2.ValueResponse.SerializeToString,
            ),
            'VoteRequest': grpc.unary_unary_rpc_method_handler(
                    servicer.VoteRequest,
                    request_deserializer=server__pb2.VoteRequestMessage.FromString,
                    response_serializer=server__pb2.VoteResponseMessage.SerializeToString,
            ),
            'Heartbeat': grpc.unary_unary_rpc_method_handler(
                    servicer.Heartbeat,
                    request_deserializer=server__pb2.HeartbeatRequest.FromString,
                    response_serializer=server__pb2.HeartbeatResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'server.KeyValueStore', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class KeyValueStore(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetValue(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/server.KeyValueStore/GetValue',
            server__pb2.ValueRequest.SerializeToString,
            server__pb2.ValueResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PutValue(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/server.KeyValueStore/PutValue',
            server__pb2.ValueRequest.SerializeToString,
            server__pb2.ValueResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def VoteRequest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/server.KeyValueStore/VoteRequest',
            server__pb2.VoteRequestMessage.SerializeToString,
            server__pb2.VoteResponseMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Heartbeat(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/server.KeyValueStore/Heartbeat',
            server__pb2.HeartbeatRequest.SerializeToString,
            server__pb2.HeartbeatResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
